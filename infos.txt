add level 2: inspace, no obstacle, with instructions and all the time to learn
how to play (press 1+2) to quit
add a neww step on level 5, with a very big landing zone close to the first one

forbid hz out of screen ?
fix lava out of screen
make 2 variables for lava speed change (set by difficulty?)

add other collisions models

have 5 lives (small rocket sprites vertically arranged)

do not clear all data for showLevel

make a generic load data function using pile to get all adresses ?

Double every landing zone for 2-player game?

last level : lava going up with 2 levels of palette hack: light then lava.
both with color loop ? Make the cave dark
when getting out, enable vscroll up out of memory with this line:
;remove this line to enable out of memory
stop collisions and stop fuel counter, end of game when hitting y=0

--------------------------------------------------------------------------------

collisions:
the first 3 bits of each tile in tilemap contains collision data.
000: empty
001: full
010: half low
011: half hi
100: slope down (check x-flip)
101: slope up (check x-flip)
110: half side (check x-flip)
111: special

read collision data from rom (not vram): level data start + yscrolltotal + yscroll mod 8
!!!!! force tilemap w to be a power of 2, make a xy2index function for each w.
=> vram is simpler

make a draw_rocket function that takes "small_rocket" into account.
if small rocket, top collison point is less high.

TODO: implement dumping
TODO: implement color loop for fire
--------------------------------------------------------------------------------
each level has his onw SpecialTileFunction, called when touching a special case
(most of the time try to land and end en level).
SpecialTileFunction is a variable initialized at each level


function RunGame is strange no need to use palette0...


add tiles_vram_used in demo too

keep posY as 8.8 ? use it as local to screen ?

--------------------------------------------------------------------------------
 3008 bytes for chars, divided by 4 using 1bpp tiles => 2256 bytes saved
 
 re-arrange rom to have data specific to a level in one file, and chers in an other,
 and be able to load chars using an other function
 
 3590 bytes for Brahms music
 2100 bytes for demo music
 4864 bytes for vertical level
 96 tiles for vertical level bg: 3072 bytes, if compressed : 2603 bytes
 demo sprites :  768, 559 if compressed
 demo tiles : 1536, 1075 if compressed

 1500 bytes for jmimu tilemap => make it 200!
